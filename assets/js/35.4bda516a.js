(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{217:function(e,t,r){"use strict";r.r(t);var a=r(0),o=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),r("p",[e._v("There is no “right” answer for this. Some users prefer to keep every single piece of data in Redux, to maintain a fully serializable and controlled version of their application at all times. Others prefer to keep non-critical or UI state, such as “is this dropdown currently open”, inside a component's internal state.")]),e._v(" "),e._m(5),e._v(" "),r("p",[e._v("Some common rules of thumb for determining what kind of data should be put into Redux:")]),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("There are a number of community packages that implement various approaches for storing per-component state in a Redux store instead, such as "),r("a",{attrs:{href:"https://github.com/tonyhb/redux-ui",target:"_blank",rel:"noopener noreferrer"}},[e._v("redux-ui"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://github.com/tomchentw/redux-component",target:"_blank",rel:"noopener noreferrer"}},[e._v("redux-component"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://github.com/threepointone/redux-react-local",target:"_blank",rel:"noopener noreferrer"}},[e._v("redux-react-local"),r("OutboundLink")],1),e._v(", and more. It's also possible to apply Redux's principles and concept of reducers to the task of updating local component state as well, along the lines of "),r("code",[e._v("this.setState( (previousState) => reducer(previousState, someAction))")]),e._v(".")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367",target:"_blank",rel:"noopener noreferrer"}},[e._v("You Might Not Need Redux"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/@adamrackis/finding-state-s-place-with-react-and-redux-e9a586630172",target:"_blank",rel:"noopener noreferrer"}},[e._v("Finding "),r("code",[e._v("state")]),e._v("'s place with React and Redux"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/@zackargyle/a-case-for-setstate-1f1c47cd3f73",target:"_blank",rel:"noopener noreferrer"}},[e._v("A Case for setState"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/react-ecosystem/how-to-handle-state-in-react-6f2d3cd73a0c",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to handle state in React: the missing FAQ"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.freecodecamp.com/where-do-i-belong-a-guide-to-saving-react-component-data-in-state-store-static-and-this-c49b335e2a00",target:"_blank",rel:"noopener noreferrer"}},[e._v("Where to Hold React Component Data: state, store, static, and this"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://jamesknelson.com/5-types-react-application-state/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The 5 Types of React Application State"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://hackernoon.com/shape-your-redux-store-like-your-database-98faa4754fd5",target:"_blank",rel:"noopener noreferrer"}},[e._v("Shape Your Redux Store Like Your Database"),r("OutboundLink")],1)])]),e._v(" "),e._m(9),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/159",target:"_blank",rel:"noopener noreferrer"}},[e._v("#159: Investigate using Redux for pseudo-local component state"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1098",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1098: Using Redux in reusable React component"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1287",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1287: How to choose between Redux's store and React's state?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1385",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1385: What are the disadvantages of storing all your state in a single immutable atom?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://twitter.com/dan_abramov/status/749710501916139520",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twitter: Should I keep something in React component state?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://twitter.com/dan_abramov/status/736310245945933824",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twitter: Using a reducer to update a component"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://discuss.reactjs.org/t/redux-and-global-state-vs-local-state/4187",target:"_blank",rel:"noopener noreferrer"}},[e._v("React Forums: Redux and global state vs local state"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.reddit.com/r/reactjs/comments/4w04to/when_using_redux_should_all_asynchronous_actions/d63u4o8",target:"_blank",rel:"noopener noreferrer"}},[e._v('Reddit: "When should I put something into my Redux store?"'),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/35664594/redux-why-is-state-all-in-one-place-even-state-that-isnt-global",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stack Overflow: Why is state all in one place, even state that isn't global?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/35328056/react-redux-should-all-component-states-be-kept-in-redux-store",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stack Overflow: Should all component state be kept in Redux store?"),r("OutboundLink")],1)])]),e._v(" "),e._m(10),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/markerikson/redux-ecosystem-links/blob/master/component-state.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redux Addons Catalog: Component State"),r("OutboundLink")],1)])]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1248",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1248: Is it ok and possible to store a react component in a reducer?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1279",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1279: Have any suggestions for where to put a Map Component in Flux?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1390",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1390: Component Loading"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1407",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1407: Just sharing a great base class"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1793",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1793: React Elements in Redux State"),r("OutboundLink")],1)])]),e._v(" "),e._m(16),e._v(" "),r("p",[e._v("Data with IDs, nesting, or relationships should generally be stored in a “normalized” fashion: each object should be stored once, keyed by ID, and other objects that reference it should only store the ID rather than a copy of the entire object. It may help to think of parts of your store as a database, with individual “tables” per item type. Libraries such as "),r("a",{attrs:{href:"https://github.com/paularmstrong/normalizr",target:"_blank",rel:"noopener noreferrer"}},[e._v("normalizr"),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://github.com/tommikaikkonen/redux-orm",target:"_blank",rel:"noopener noreferrer"}},[e._v("redux-orm"),r("OutboundLink")],1),e._v(" can provide help and abstractions in managing normalized data.")]),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"./../advanced/AsyncActions.html"}},[e._v("Advanced: Async Actions")])],1),e._v(" "),r("li",[r("router-link",{attrs:{to:"./../introduction/Examples.html#real-world"}},[e._v("Examples: Real World example")])],1),e._v(" "),r("li",[r("router-link",{attrs:{to:"./../recipes/structuring-reducers/PrerequisiteConcepts.html#normalizing-data"}},[e._v("Recipes: Structuring Reducers - Prerequisite Concepts")])],1),e._v(" "),r("li",[r("router-link",{attrs:{to:"./../recipes/structuring-reducers/NormalizingStateShape.html"}},[e._v("Recipes: Structuring Reducers - Normalizing State Shape")])],1),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/tree/master/examples/tree-view",target:"_blank",rel:"noopener noreferrer"}},[e._v("Examples: Tree View"),r("OutboundLink")],1)])]),e._v(" "),e._m(19),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://somebody32.github.io/high-performance-redux/",target:"_blank",rel:"noopener noreferrer"}},[e._v("High-Performance Redux"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/@adamrackis/querying-a-redux-store-37db8c7f3b0f",target:"_blank",rel:"noopener noreferrer"}},[e._v("Querying a Redux Store"),r("OutboundLink")],1)])]),e._v(" "),e._m(20),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/316",target:"_blank",rel:"noopener noreferrer"}},[e._v("#316: How to create nested reducers?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/815",target:"_blank",rel:"noopener noreferrer"}},[e._v("#815: Working with Data Structures"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/946",target:"_blank",rel:"noopener noreferrer"}},[e._v("#946: Best way to update related state fields with split reducers?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/994",target:"_blank",rel:"noopener noreferrer"}},[e._v("#994: How to cut the boilerplate when updating nested entities?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1255",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1255: Normalizr usage with nested objects in React/Redux"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/pull/1269",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1269: Add tree view example"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1824#issuecomment-228585904",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1824: Normalising state and garbage collection"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://twitter.com/dan_abramov/status/715507260244496384",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twitter: state shape should be normalized"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/32798193/how-to-handle-tree-shaped-entities-in-redux-reducers",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stack Overflow: How to handle tree-shaped entities in Redux reducers?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/37264415/how-to-optimize-small-updates-to-props-of-nested-component-in-react-redux",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stack Overflow: How to optimize small updates to props of nested components in React + Redux?"),r("OutboundLink")],1)])]),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),r("p",[e._v("Based on this, in most cases you probably don't need a Redux-based form management library either. We suggest trying these approaches, in this order:")]),e._v(" "),r("ul",[r("li",[e._v("Even if the data is coming from the Redux store, start by writing your form logic by hand. It's likely this is all you'll need. (See "),r("a",{attrs:{href:"https://goshakkk.name/on-forms-react/",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[e._v("Gosha Arinich's posts on working with forms in React")]),r("OutboundLink")],1),e._v(" for some excellent guidance on this.)")]),e._v(" "),r("li",[e._v('If you decide that writing forms "manually" is too difficult, try a React-based form library like '),r("a",{attrs:{href:"https://github.com/jaredpalmer/formik",target:"_blank",rel:"noopener noreferrer"}},[e._v("Formik"),r("OutboundLink")],1),e._v(" or "),r("a",{attrs:{href:"https://github.com/final-form/react-final-form",target:"_blank",rel:"noopener noreferrer"}},[e._v("React-Final-Form"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("li",[e._v("If you are absolutely sure you "),r("em",[e._v("must")]),e._v(" use a Redux-based form library because the other approaches aren't sufficient, then you may finally want to look at "),r("a",{attrs:{href:"https://github.com/erikras/redux-form",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redux-Form"),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://github.com/davidkpiano/react-redux-form",target:"_blank",rel:"noopener noreferrer"}},[e._v("React-Redux-Form"),r("OutboundLink")],1),e._v(".")])]),e._v(" "),r("p",[e._v("If you are keeping form state in Redux, you should take some time to consider performance characteristics. Dispatching an action on every keystroke of a text input probably isn't worthwhile, and you may want to look into "),r("a",{attrs:{href:"https://blog.isquaredsoftware.com/2017/01/practical-redux-part-7-forms-editing-reducers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ways to buffer keystrokes to keep changes local before dispatching"),r("OutboundLink")],1),e._v(". As always, take some time to analyze the overall performance needs of your own application.")]),e._v(" "),r("p",[e._v("Other kinds of UI state follow these rules of thumb as well. The classic example is tracking an "),r("code",[e._v("isDropdownOpen")]),e._v(" flag. In most situations, the rest of the app doesn't care about this, so in most cases it should stay in component state. However, depending on your application, it may make sense to use Redux to "),r("a",{attrs:{href:"https://blog.isquaredsoftware.com/2017/07/practical-redux-part-10-managing-modals/",target:"_blank",rel:"noopener noreferrer"}},[e._v("manage dialogs and other popups"),r("OutboundLink")],1),e._v(", tabs, expanding panels, and so on.")]),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://goshakkk.name/on-forms-react/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gosha Arinich: Writings on Forms in React"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blog.isquaredsoftware.com/2017/01/practical-redux-part-6-connected-lists-forms-and-performance/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Practical Redux, Part 6: Connected Lists and Forms"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blog.isquaredsoftware.com/2017/01/practical-redux-part-7-forms-editing-reducers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Practical Redux, Part 7: Form Change Handling"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blog.isquaredsoftware.com/2017/07/practical-redux-part-10-managing-modals/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Practical Redux, Part 10: Managing Modals and Context Menus"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/markerikson/react-redux-links/blob/master/redux-ui-management.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("React/Redux Links: Redux UI Management"),r("OutboundLink")],1)])])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"redux-faq-organizing-state"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redux-faq-organizing-state","aria-hidden":"true"}},[this._v("#")]),this._v(" Redux FAQ: Organizing State")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"table-of-contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents","aria-hidden":"true"}},[this._v("#")]),this._v(" Table of Contents")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("a",{attrs:{href:"#do-i-have-to-put-all-my-state-into-redux-should-i-ever-use-reacts-setstate"}},[this._v("Do I have to put all my state into Redux? Should I ever use React's setState()?")])]),this._v(" "),t("li",[t("a",{attrs:{href:"#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state"}},[this._v("Can I put functions, promises, or other non-serializable items in my store state?")])]),this._v(" "),t("li",[t("a",{attrs:{href:"#how-do-i-organize-nested-or-duplicate-data-in-my-state"}},[this._v("How do I organize nested or duplicate data in my state?")])]),this._v(" "),t("li",[t("a",{attrs:{href:"#should-i-put-form-state-or-other-ui-state-in-my-store"}},[this._v("Should I put form state or other UI state in my store?")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"organizing-state"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#organizing-state","aria-hidden":"true"}},[this._v("#")]),this._v(" Organizing State")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"do-i-have-to-put-all-my-state-into-redux-should-i-ever-use-react-s-setstate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#do-i-have-to-put-all-my-state-into-redux-should-i-ever-use-react-s-setstate","aria-hidden":"true"}},[this._v("#")]),this._v(" Do I have to put all my state into Redux? Should I ever use React's "),t("code",[this._v("setState()")]),this._v("?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[t("em",[this._v("Using local component state is fine")])]),this._v(". As a developer, it is "),t("em",[this._v("your")]),this._v(" job to determine what kinds of state make up your application, and where each piece of state should live. Find a balance that works for you, and go with it.")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("Do other parts of the application care about this data?")]),e._v(" "),r("li",[e._v("Do you need to be able to create further derived data based on this original data?")]),e._v(" "),r("li",[e._v("Is the same data being used to drive multiple components?")]),e._v(" "),r("li",[e._v("Is there value to you in being able to restore this state to a given point in time (ie, time travel debugging)?")]),e._v(" "),r("li",[e._v("Do you want to cache the data (ie, use what's in state if it's already there instead of re-requesting it)?")]),e._v(" "),r("li",[e._v("Do you want to keep this data consistent while hot-reloading UI components (which may lose their internal state when swapped)?")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"further-information"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-information","aria-hidden":"true"}},[this._v("#")]),this._v(" Further information")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Articles")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Discussions")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Libraries")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state","aria-hidden":"true"}},[this._v("#")]),this._v(" Can I put functions, promises, or other non-serializable items in my store state?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("It is highly recommended that you only put plain serializable objects, arrays, and primitives into your store. It's "),t("em",[this._v("technically")]),this._v(" possible to insert non-serializable items into the store, but doing so can break the ability to persist and rehydrate the contents of a store, as well as interfere with time-travel debugging.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If you are okay with things like persistence and time-travel debugging potentially not working as intended, then you are totally welcome to put non-serializable items into your Redux store. Ultimately, it's "),t("em",[this._v("your")]),this._v(" application, and how you implement it is up to you. As with many other things about Redux, just be sure you understand what tradeoffs are involved.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"further-information-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-information-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Further information")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Discussions")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"how-do-i-organize-nested-or-duplicate-data-in-my-state"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-do-i-organize-nested-or-duplicate-data-in-my-state","aria-hidden":"true"}},[this._v("#")]),this._v(" How do I organize nested or duplicate data in my state?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"further-information-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-information-3","aria-hidden":"true"}},[this._v("#")]),this._v(" Further information")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Documentation")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Articles")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Discussions")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"should-i-put-form-state-or-other-ui-state-in-my-store"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#should-i-put-form-state-or-other-ui-state-in-my-store","aria-hidden":"true"}},[this._v("#")]),this._v(" Should I put form state or other UI state in my store?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("a",{attrs:{href:"#do-i-have-to-put-all-my-state-into-redux-should-i-ever-use-reacts-setstate"}},[this._v("same rules of thumb for deciding what should go in the Redux store")]),this._v(" apply for this question as well.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Based on those rules of thumb, most form state doesn't need to go into Redux")]),this._v(", as it's probably not being shared between components. However, that decision is always going to be specific to you and your application. You might choose to keep some form state in Redux because you are editing data that came from the store originally, or because you do need to see the work-in-progress values reflected in other components elsewhere in the application. On the other hand, it may be a lot simpler to keep the form state local to the component, and only dispatch an action to put the data in the store once the user is done with the form.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"further-information-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-information-4","aria-hidden":"true"}},[this._v("#")]),this._v(" Further Information")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Articles")])])}],!1,null,null,null);t.default=o.exports}}]);