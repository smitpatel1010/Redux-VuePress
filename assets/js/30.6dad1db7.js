(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{232:function(e,t,r){"use strict";r.r(t);var a=r(0),o=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),r("p",[e._v("Since Redux is just a data store library, it has no direct opinion on how your project should be structured. However, there are a few common patterns that most Redux developers tend to use:")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("While it ultimately doesn't matter how you lay out your code on disk, it's important to remember that actions and reducers shouldn't be considered in isolation. It's entirely possible (and encouraged) for a reducer defined in one folder to respond to an action defined in another folder.")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"./Actions.html#actions-reducer-mappings"}},[e._v('FAQ: Actions - "1:1 mapping between reducers and actions?"')])],1)]),e._v(" "),e._m(9),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.smashingmagazine.com/2016/09/how-to-scale-react-applications/",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to Scale React Applications"),r("OutboundLink")],1),e._v(" (accompanying talk: "),r("a",{attrs:{href:"https://vimeo.com/168648012",target:"_blank",rel:"noopener noreferrer"}},[e._v("Scaling React Applications"),r("OutboundLink")],1),e._v(")")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/lexical-labs-engineering/redux-best-practices-64d59775802e",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redux Best Practices"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://jaysoo.ca/2016/02/28/organizing-redux-application/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rules For Structuring (Redux) Applications "),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://marmelab.com/blog/2015/12/17/react-directory-structure.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("A Better File Structure for React/Redux Applications"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://engineering.kapost.com/2016/01/organizing-large-react-applications/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Organizing Large React Applications"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/@msandin/strategies-for-organizing-code-2c9d690b6f33",target:"_blank",rel:"noopener noreferrer"}},[e._v("Four Strategies for Organizing Code"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://randycoulman.com/blog/2016/09/13/encapsulating-the-redux-state-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Encapsulating the Redux State Tree"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://randycoulman.com/blog/2016/09/20/redux-reducer-selector-asymmetry/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redux Reducer/Selector Asymmetry"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://randycoulman.com/blog/2016/09/27/modular-reducers-and-selectors/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Modular Reducers and Selectors"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/@mmazzarolo/my-journey-toward-a-maintainable-project-structure-for-react-redux-b05dfd999b5",target:"_blank",rel:"noopener noreferrer"}},[e._v("My journey towards a maintainable project structure for React/Redux"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/markerikson/react-redux-links/blob/master/react-redux-architecture.md#project-file-structure",target:"_blank",rel:"noopener noreferrer"}},[e._v("React/Redux Links: Architecture - Project File Structure"),r("OutboundLink")],1)])]),e._v(" "),e._m(10),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/839",target:"_blank",rel:"noopener noreferrer"}},[e._v("#839: Emphasize defining selectors alongside reducers"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/943",target:"_blank",rel:"noopener noreferrer"}},[e._v("#943: Reducer querying"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/mxstbr/react-boilerplate/issues/27",target:"_blank",rel:"noopener noreferrer"}},[e._v("React Boilerplate #27: Application Structure"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/32634320/how-to-structure-redux-components-containers/32921576",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stack Overflow: How to structure Redux components/containers"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://twitter.com/dan_abramov/status/783428282666614784",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twitter: There is no ultimate file structure for Redux"),r("OutboundLink")],1)])]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),r("p",[e._v("This comment sums up the dichotomy nicely:")]),e._v(" "),e._m(14),e._v(" "),r("p",[e._v("Find the balance between these two extremes, and you will master Redux.")]),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://medium.com/@jeffbski/where-do-i-put-my-business-logic-in-a-react-redux-application-9253ef91ce1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Where do I put my business logic in a React/Redux application?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.smashingmagazine.com/2016/09/how-to-scale-react-applications/",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to Scale React Applications"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://blog.isquaredsoftware.com/2017/05/idiomatic-redux-tao-of-redux-part-2/#thick-and-thin-reducers",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Tao of Redux, Part 2 - Practice and Philosophy. Thick and thin reducers."),r("OutboundLink")],1)])]),e._v(" "),e._m(17),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/384#issuecomment-127393209",target:"_blank",rel:"noopener noreferrer"}},[e._v("How putting too much logic in action creators could affect debugging"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/384#issuecomment-127393209",target:"_blank",rel:"noopener noreferrer"}},[e._v("#384: The more that's in a reducer, the more you can replay via time travel"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1165",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1165: Where to put business logic / validation?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/1171",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1171: Recommendations for best practices regarding action-creators, reducers, and selectors"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://stackoverflow.com/questions/35667249/accessing-redux-state-in-an-action-creator/35674575",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stack Overflow: Accessing Redux state in an action creator?"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/2796#issue-289298280",target:"_blank",rel:"noopener noreferrer"}},[e._v('#2796: Gaining clarity on "business logic"'),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://twitter.com/FwardPhoenix/status/952971237004926977",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twitter: Moving away from unclear terminology..."),r("OutboundLink")],1)])]),e._v(" "),e._m(18),e._v(" "),r("p",[e._v("Redux does not require action creators. You are free to create actions in any way that is best for you, including simply passing an object literal to "),r("code",[e._v("dispatch")]),e._v(". Action creators emerged from the "),r("a",{attrs:{href:"https://facebook.github.io/react/blog/2014/07/30/flux-actions-and-the-dispatcher.html#actions-and-actioncreators",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flux architecture"),r("OutboundLink")],1),e._v(" and have been adopted by the Redux community because they offer several benefits.")]),e._v(" "),r("p",[e._v("Action creators are more maintainable. Updates to an action can be made in one place and applied everywhere. All instances of an action are guaranteed to have the same shape and the same default values.")]),e._v(" "),r("p",[e._v("Action creators are testable. The correctness of an inline action must be verified manually. Like any function, tests for an action creator can be written once and run automatically.")]),e._v(" "),r("p",[e._v("Action creators are easier to document. The action creator's parameters enumerate the action's dependencies. And centralization of the action definition provides a convenient place for documentation comments. When actions are written inline, this information is harder to capture and communicate.")]),e._v(" "),r("p",[e._v("Action creators are a more powerful abstraction. Creating an action often involves transforming data or making AJAX requests. Action creators provide a uniform interface to this varied logic. This abstraction frees a component to dispatch an action without being complicated by the details of that action's creation.")]),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://blog.isquaredsoftware.com/2016/10/idiomatic-redux-why-use-action-creators/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Idiomatic Redux: Why use action creators?"),r("OutboundLink")],1)])]),e._v(" "),e._m(21),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.reddit.com/r/reactjs/comments/54k8js/redbox_redux_action_creation_made_simple/d8493z1/?context=4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reddit: Redbox - Redux action creation made simple"),r("OutboundLink")],1)])]),e._v(" "),e._m(22),e._v(" "),r("p",[e._v("Middleware are the right place for persistent connections like websockets in a Redux app, for several reasons:")]),e._v(" "),e._m(23),e._v(" "),r("p",[e._v("See "),r("a",{attrs:{href:"https://gist.github.com/markerikson/3df1cf5abbac57820a20059287b4be58",target:"_blank",rel:"noopener noreferrer"}},[e._v("this example that shows how a socket middleware might dispatch and respond to Redux actions"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("There's many existing middleware for websockets and other similar connections - see the link below.")]),e._v(" "),e._m(24),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/markerikson/redux-ecosystem-links/blob/master/middleware-sockets-adapters.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Middleware: Socket and Adapters"),r("OutboundLink")],1)])])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"redux-faq-code-structure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redux-faq-code-structure","aria-hidden":"true"}},[this._v("#")]),this._v(" Redux FAQ: Code Structure")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"table-of-contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents","aria-hidden":"true"}},[this._v("#")]),this._v(" Table of Contents")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("a",{attrs:{href:"#what-should-my-file-structure-look-like-how-should-i-group-my-action-creators-and-reducers-in-my-project-where-should-my-selectors-go"}},[this._v("What should my file structure look like? How should I group my action creators and reducers in my project? Where should my selectors go?")])]),this._v(" "),t("li",[t("a",{attrs:{href:"#how-should-i-split-my-logic-between-reducers-and-action-creators-where-should-my-business-logic-go"}},[this._v("How should I split my logic between reducers and action creators? Where should my “business logic” go?")])]),this._v(" "),t("li",[t("a",{attrs:{href:"#why-should-i-use-action-creators"}},[this._v("Why should I use action creators?")])]),this._v(" "),t("li",[t("a",{attrs:{href:"#where-should-websockets-and-other-persistent-connections-live"}},[this._v("Where should websockets and other persistent connections live?")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"code-structure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#code-structure","aria-hidden":"true"}},[this._v("#")]),this._v(" Code Structure")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"what-should-my-file-structure-look-like-how-should-i-group-my-action-creators-and-reducers-in-my-project-where-should-my-selectors-go"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-should-my-file-structure-look-like-how-should-i-group-my-action-creators-and-reducers-in-my-project-where-should-my-selectors-go","aria-hidden":"true"}},[this._v("#")]),this._v(" What should my file structure look like? How should I group my action creators and reducers in my project? Where should my selectors go?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Rails-style: separate folders for “actions”, “constants”, “reducers”, “containers”, and “components”")]),this._v(" "),t("li",[this._v("Domain-style: separate folders per feature or domain, possibly with sub-folders per file type")]),this._v(" "),t("li",[this._v("“Ducks”: similar to domain style, but explicitly tying together actions and reducers, often by defining them in the same file")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("It's generally suggested that selectors are defined alongside reducers and exported, and then reused elsewhere (such as in "),t("code",[this._v("mapStateToProps")]),this._v(" functions, in async action creators, or sagas) to colocate all the code that knows about the actual shape of the state tree in the reducer files.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"further-information"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-information","aria-hidden":"true"}},[this._v("#")]),this._v(" Further information")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Documentation")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Articles")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Discussions")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"how-should-i-split-my-logic-between-reducers-and-action-creators-where-should-my-“business-logic”-go"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-should-i-split-my-logic-between-reducers-and-action-creators-where-should-my-“business-logic”-go","aria-hidden":"true"}},[this._v("#")]),this._v(" How should I split my logic between reducers and action creators? Where should my “business logic” go?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("There's no single clear answer to exactly what pieces of logic should go in a reducer or an action creator. Some developers prefer to have “fat” action creators, with “thin” reducers that simply take the data in an action and blindly merge it into the corresponding state. Others try to emphasize keeping actions as small as possible, and minimize the usage of "),t("code",[this._v("getState()")]),this._v(' in an action creator. (For purposes of this question, other async approaches such as sagas and observables fall in the "action creator" category.)')])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("There are some potential benefits from putting more logic into your reducers. It's likely that the action types would be more semantic and more meaningful (such as "),t("code",[this._v('"USER_UPDATED"')]),this._v(" instead of "),t("code",[this._v('"SET_STATE"')]),this._v("). In addition, having more logic in reducers means that more functionality will be affected by time travel debugging.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("Now, the problem is what to put in the action creator and what in the reducer, the choice between fat and thin action objects. If you put all the logic in the action creator, you end up with fat action objects that basically declare the updates to the state. Reducers become pure, dumb, add-this, remove that, update these functions. They will be easy to compose. But not much of your business logic will be there.\nIf you put more logic in the reducer, you end up with nice, thin action objects, most of your data logic in one place, but your reducers are harder to compose since you might need info from other branches. You end up with large reducers or reducers that take additional arguments from higher up in the state.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"further-information-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-information-2","aria-hidden":"true"}},[this._v("#")]),this._v(" Further information")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Articles")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Discussions")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"why-should-i-use-action-creators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#why-should-i-use-action-creators","aria-hidden":"true"}},[this._v("#")]),this._v(" Why should I use action creators?")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"further-information-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-information-3","aria-hidden":"true"}},[this._v("#")]),this._v(" Further information")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Articles")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Discussions")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"where-should-websockets-and-other-persistent-connections-live"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#where-should-websockets-and-other-persistent-connections-live","aria-hidden":"true"}},[this._v("#")]),this._v(" Where should websockets and other persistent connections live?")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("Middleware exist for the lifetime of the application")]),e._v(" "),r("li",[e._v("Like with the store itself, you probably only need a single instance of a given connection that the whole app can use")]),e._v(" "),r("li",[e._v("Middleware can see all dispatched actions and dispatch actions themselves. This means a middleware can take dispatched actions and turn those into messages sent over the websocket, and dispatch new actions when a message is received over the websocket.")]),e._v(" "),r("li",[e._v("A websocket connection instance isn't serializable, so "),r("a",{attrs:{href:"/faq/organizing-state#organizing-state-non-serializable"}},[e._v("it doesn't belong in the store state itself")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Libraries")])])}],!1,null,null,null);t.default=o.exports}}]);